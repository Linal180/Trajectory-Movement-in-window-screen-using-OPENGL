#include <stdlib.h>

#include <windows.h>  // For MS Windows
#include <GL/glut.h> 
#include <math.h>
#include <iostream>
float s_x = 0.0;
float s_y = 0.0;
float t = 0.05;
float c1 = 0.0, c2 = 0.0, c3=0.0;
void myinit()
{
	glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	
	gluOrtho2D(0, 350,0, 350);
	glMatrixMode(GL_MODELVIEW);
}


void display() {
	glClear(GL_COLOR_BUFFER_BIT);
	/*glColor3f(1.0f,0.0f,0.0f);*/
	c1 = (float)rand() / RAND_MAX;
	c2 = (float)rand() / RAND_MAX;
	c3 = (float)rand() / RAND_MAX;
	glColor3f(c1, c2, c3);
	glPointSize(20.0f);
	glBegin(GL_POINTS);
	glVertex2f(s_x, s_y);
	glEnd();
	glFlush();
}

void myTimer(int value) {
	double theta = 60.0;
	double u = 10.0;
	s_x += u*cos(theta*(3.14/180.0))*t;
	s_y += u * sin(theta*(3.14 / 180.0))*t + 0.5*(-10)*t*t;
	t = t + 0.05;
	if (s_x >= 340 || s_y < 0)
	{
		s_x = 0.0;
		s_y = 0.0;
		t = 0.05;
	}
	glutPostRedisplay();
	glutTimerFunc(50, myTimer, 0);
}

int main(int argc, char ** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(200, 200);
	glutCreateWindow("Projectile");
	glutDisplayFunc(display);
	myinit();
	glutTimerFunc(1000, myTimer, 0);
	glutMainLoop();

	return 0;
}